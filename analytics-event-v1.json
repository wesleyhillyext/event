{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://schema.yext.com/api/analytics/event",
  "$version": "1",
  "type": "object",
  "title": "Analytics Event",
  "description": "Represents an event for analytics purposes.",
  "required": [
    "action"
  ],
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "const": "https://schema.yext.com/api/analytics/event/v1"
    },
    "action": {
      "description": "The action which caused the event.",
      "oneOf": [
        {
          "type": "string",
          "title": "Standard",
          "caseSensitive": false,
          "description": "The action which caused the event. `caseSensitive: false`",
          "enum": [
            "ADD_TO_CART",
            "ALL_TAB_NAVIGATION",
            "APPLY",
            "AUTO_COMPLETE_SELECTION",
            "BACKWARD_PAGINATE",
            "BOOK",
            "BRAND_ICON",
            "CALL_TO_ACTION",
            "CASE_START",
            "CASE_SUBMITTED",
            "COLLAPSE",
            "DIRECTIONS",
            "EVENT",
            "EXPAND",
            "FEATURED_MESSAGE",
            "FILTERING_WITHIN_SECTION",
            "FORWARD_PAGINATE",
            "HEADER_LINKS",
            "ITEM_IN_LIST",
            "MAP_CARD",
            "MAP_PIN",
            "MENU",
            "MESSAGE",
            "ORDER",
            "PAGINATE",
            "PHONE",
            "POST",
            "PRESET_PROMPT",
            "PRODUCT",
            "PROFILE",
            "QUESTION_FOCUS",
            "QUESTION_SUBMIT",
            "REMOVED_FILTER",
            "REVIEW",
            "SCROLL_TO_BOTTOM_OF_PAGE",
            "SEARCH_BAR_IMPRESSION",
            "SEARCH_CLEAR_BUTTON",
            "THUMBS_DOWN",
            "THUMBS_UP",
            "TICKET_URL",
            "TITLE",
            "VERTICAL_TAB_NAVIGATION",
            "VERTICAL_VIEW_ALL",
            "VOICE_START",
            "VOICE_STOP",
            "WEBSITE"
          ]
        },
        {
          "type": "string",
          "regex": "^[Cc]_[a-zA-Z0-9_-]{1,30}$",
          "title": "Custom",
          "caseSensitive": false,
          "description": "Specifies a custom action for the event, which must start with \"`C_`\". `caseSensitive: false`, `regex: \"^[Cc]_[a-zA-Z0-9_-]{1,30}$\"`"
        }
      ]
    },
    "bot": {
      "description": "Whether the event is the result of bot activity.",
      "default": "$auto",
      "oneOf": [
        {
          "const": "false",
          "title": "false",
          "description": "Specifies that the event should not be considered bot traffic."
        },
        {
          "const": "$auto",
          "title": "$auto",
          "description": "Indicates to automatically detect whether this event originates from a bot."
        }
      ]
    },
    "browserAgent": {
      "type": "object",
      "additionalProperties": false,
      "description": "Information about the visitors device and browser.",
      "properties": {
        "browser": {
          "default": "$auto",
          "description": "The browser associated with the event.",
          "oneOf": [
            {
              "type": "string",
              "regex": "^[\\x20-\\x7E]{1,128}$",
              "title": "string",
              "description": "Specifies the browser for the event. `regex: \"^[\\x20-\\x7E]{1,128}$\"`"
            },
            {
              "const": "$auto",
              "title": "$auto",
              "description": "Indicates to automatically determine the browser from request headers, or the value of the `userAgent` property if specified."
            },
            {
              "type": "null",
              "title": "null",
              "description": "Specifies that no browser should be stored with the event."
            }
          ]
        },
        "browserVersion": {
          "default": "$auto",
          "description": "The browser version associated with the event.",
          "oneOf": [
            {
              "type": "string",
              "regex": "^[\\x20-\\x7E]{1,128}$",
              "title": "string",
              "description": "Specifies the browser version for the event. `regex: \"^[\\x20-\\x7E]{1,128}$\"`"
            },
            {
              "const": "$auto",
              "title": "$auto",
              "description": "Indicates to automatically determine the browser version from request headers, or the value of the `userAgent` property if specified."
            },
            {
              "type": "null",
              "title": "null",
              "description": "Specifies that no browser version should be stored with the event."
            }
          ]
        },
        "device": {
          "default": "$auto",
          "description": "The device associated with the event.",
          "oneOf": [
            {
              "type": "string",
              "regex": "^[\\x20-\\x7E]{1,128}$",
              "title": "string",
              "description": "Specifies the device for the event. `regex: \"^[\\x20-\\x7E]{1,128}$\"`"
            },
            {
              "const": "$auto",
              "title": "$auto",
              "description": "Indicates to automatically determine the device from request headers, or the value of the `userAgent` property if specified."
            },
            {
              "type": "null",
              "title": "null",
              "description": "Specifies that no device should be stored with the event."
            }
          ]
        },
        "deviceClass": {
          "default": "$auto",
          "description": "The class of device associated with the event.",
          "oneOf": [
            {
              "type": "string",
              "regex": "^[\\x20-\\x7E]{1,32}$",
              "caseSensitive": false,
              "title": "string",
              "description": "Specifies the device class for the event. `caseSensitive: false`, `regex: \"^[\\x20-\\x7E]{1,32}$\"`"
            },
            {
              "const": "$auto",
              "title": "$auto",
              "description": "Indicates to automatically determine the device class from request headers, or the value of the `userAgent` property if specified."
            },
            {
              "type": "null",
              "title": "null",
              "description": "Specifies that no device class should be stored with the event."
            }
          ]
        },
        "os": {
          "default": "$auto",
          "description": "The operating system associated with the event.",
          "oneOf": [
            {
              "type": "string",
              "regex": "^[\\x20-\\x7E]{1,128}$",
              "title": "string",
              "description": "Specifies the operating system for the event. `regex: \"^[\\x20-\\x7E]{1,128}$\"`"
            },
            {
              "const": "$auto",
              "title": "$auto",
              "description": "Indicates to automatically determine the operating system from request headers, or the value of the `userAgent` property if specified."
            },
            {
              "type": "null",
              "title": "null",
              "description": "Specifies that no operating system should be stored with the event."
            }
          ]
        },
        "osVersion": {
          "default": "$auto",
          "description": "The operating system version associated with the event.",
          "oneOf": [
            {
              "type": "string",
              "regex": "^[\\x20-\\x7E]{1,128}$",
              "title": "string",
              "description": "Specifies the operating system version for the event. `regex: \"^[\\x20-\\x7E]{1,128}$\"`"
            },
            {
              "const": "$auto",
              "title": "$auto",
              "description": "Indicates to automatically determine the operating system version from request headers, or the value of the `userAgent` property if specified."
            },
            {
              "type": "null",
              "title": "null",
              "description": "Specifies that no operating system version should be stored with the event."
            }
          ]
        },
        "userAgent": {
          "description": "The user agent string for the event.",
          "default": "$auto",
          "oneOf": [
            {
              "type": "string",
              "regex": "^[\\x20-\\x7E]+$",
              "title": "string",
              "description": "Specifies the user agent string for the event. `regex: \"^[\\x20-\\x7E]+$\"`"
            },
            {
              "const": "$auto",
              "title": "$auto",
              "description": "Indicates to use the `User-Agent` header of the request."
            },
            {
              "type": "null",
              "title": "null",
              "description": "Specifies that no user agent should be stored with the event."
            }
          ]
        }
      }
    },
    "conversions": {
      "type": "object",
      "title": "Conversion Tracking",
      "description": "The Conversion Tracking properties of the event.",
      "properties": {
        "action": {
          "type": "string",
          "minLength": 1,
          "maxLength": 16,
          "regex": "^[a-fA-F0-9]{16}$",
          "description": "The identifier of the conversion action triggered by the event. `regex: \"^[a-fA-F0-9]{16}$\"`"
        },
        "value": {
          "type": "number",
          "multipleOf": 0.0001,
          "description": "The value of the conversion, in the currency of the conversion action, to override the default value of the conversion action."
        }
      },
      "required": [
        "action"
      ],
      "additionalProperties": false
    },
    "count": {
      "type": "integer",
      "minimum": 1,
      "maximum": 1000000000,
      "default": 1,
      "description": "When one record summarizes multiple events, this is the number of events the record represents. The event is treated as if it is duplicated this many times."
    },
    "customProperties": {
      "type": "object",
      "description": "Up to 10 custom key-value pairs to associate with the event. Keys are case-insensitive; values are case-sensitive. Property name `regex: \"^[a-zA-Z][a-zA-Z0-9_]{0,31}$\"`",
      "maxProperties": 10,
      "additionalProperties": {
        "type": "string",
        "maxLength": 64
      },
      "propertyNames": {
        "pattern": "^[a-zA-Z][a-zA-Z0-9_]{0,31}$"
      }
    },
    "destinationUrl": {
      "type": "string",
      "format": "uri",
      "title": "URL",
      "description": "The URL of the page the event is directing the visitor to. `format: uri`"
    },
    "entity": {
      "type": "integer",
      "minimum": 1,
      "description": "The Yext entityId for the entity associated with the event."
    },
    "internalUser": {
      "type": "boolean",
      "default": "false",
      "description": "Indicates whether the event is the result of internal activity."
    },
    "ip": {
      "type": "object",
      "description": "The IP address for the event.",
      "default": {
        "address": "$auto",
        "algorithm": "HASH"
      },
      "oneOf": [
        {
          "type": "object",
          "title": "IP",
          "properties": {
            "address": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "ipv4",
                  "title": "IPv4",
                  "description": "Specifies the IPv4 address associated with the event. `format: \"ipv4\"`"
                },
                {
                  "const": "$auto",
                  "title": "$auto",
                  "description": "Indicates to use the Source IP address from the IP header of the request. This IP address is only used if the `Yext-Opt-In: ip` header is present."
                }
              ]
            },
            "algorithm": {
              "type": "string",
              "enum": [
                "HASH"
              ],
              "description": "The algorithm to use to anonymize the IP address after collection."
            }
          },
          "required": [
            "address",
            "algorithm"
          ],
          "additionalProperties": false
        },
        {
          "type": "null",
          "title": "null",
          "description": "Specifies that no IP address should be associated with the event."
        }
      ]
    },
    "listings": {
      "type": "object",
      "title": "Listings",
      "description": "The Listings properties of the event.",
      "properties": {
        "publisher": {
          "type": "integer",
          "minimum": 1,
          "description": "The publisherId of the publisher associated with the event."
        },
        "source": {
          "type": "string",
          "regex": "^[a-zA-Z0-9_-]{1,16}$",
          "caseSensitive": false,
          "description": "Type of page where the event took place. `caseSensitive: false`, `regex: \"^[a-zA-Z0-9_-]{1,16}$\"`"
        },
        "target": {
          "type": "string",
          "regex": "^[a-zA-Z0-9_-]{1,16}$",
          "caseSensitive": false,
          "description": "Indicates which part of the page the visitor clicked on. `caseSensitive: false`, `regex: \"^[a-zA-Z0-9_-]{1,16}$\"`"
        }
      },
      "required": [
        "publisher"
      ],
      "additionalProperties": false
    },
    "locale": {
      "default": "$auto",
      "description": "The locale of the visitor for the event.",
      "oneOf": [
        {
          "type": "string",
          "title": "Locale",
          "minLength": 1,
          "maxLength": 16,
          "description": "Specifies the locale of the visitor for the event, e.g. `en-US`."
        },
        {
          "const": "$auto",
          "title": "$auto",
          "description": "Indicates to automatically determine the locale from the Accept-Language header."
        },
        {
          "type": "null",
          "title": "null",
          "description": "Specifies that no locale information should be stored with the event."
        }
      ]
    },
    "location": {
      "default": "$auto",
      "description": "The location of the visitor for the event.",
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": false,
          "title": "Location",
          "description": "Specifies the location information of visitor for the event.",
          "properties": {
            "coordinates": {
              "type": "object",
              "description": "The geographic coordinates of the visitor for the event.",
              "properties": {
                "latitude": {
                  "type": "number",
                  "minimum": -90,
                  "maximum": 90,
                  "description": "The latitude, in degrees North."
                },
                "longitude": {
                  "type": "number",
                  "minimum": -180,
                  "maximum": 180,
                  "description": "The longitude, in degrees East."
                },
                "radiusMeters": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "The accuracy radius of the coordinates, in meters."
                }
              },
              "required": [
                "latitude",
                "longitude"
              ],
              "additionalProperties": false
            },
            "country": {
              "type": "string",
              "minLength": 2,
              "maxLength": 2,
              "caseSensitive": false,
              "description": "The country of the visitor for the event, as a ISO 3166-1 alpha-2 country code. `caseSensitive: false`"
            }
          }
        },
        {
          "const": "$auto",
          "title": "$auto",
          "description": "Indicates to automatically determine all location information from the request's IP address, or the value of the `ip` property if specified."
        },
        {
          "type": "null",
          "title": "null",
          "description": "Specifies that no location information should be stored with the event."
        }
      ]
    },
    "nonce": {
      "type": "string",
      "regex": "^[\\x20-\\x7E]{1,36}$",
      "description": "Deduplication ID for the event. Events from the same app for the same business with the same nonce will get de-duplicated. `regex: \"^[\\x20-\\x7E]{1,36}$\"`"
    },
    "pageUrl": {
      "description": "The URL of the page the event occurred on.",
      "default": "$auto",
      "oneOf": [
        {
          "type": "string",
          "format": "uri",
          "title": "URL",
          "description": "Specifies the URL of the page the event occurred on. `format: uri`"
        },
        {
          "const": "$auto",
          "title": "$auto",
          "description": "Indicates to use the `Referer` header of the request."
        },
        {
          "type": "null",
          "title": "null",
          "description": "Specifies that no page URL should be stored with the event."
        }
      ]
    },
    "pages": {
      "type": "object",
      "title": "Pages",
      "description": "The Pages properties of the event.",
      "properties": {
        "directory": {
          "type": "string",
          "minLength": 1,
          "maxLength": 256,
          "description": "The directoryId for Consulting Pages."
        },
        "group": {
          "type": "string",
          "minLength": 1,
          "maxLength": 256,
          "description": "The Entity Page Set for Consulting Pages."
        },
        "pageSet": {
          "type": "integer",
          "minimum": 1,
          "description": "The pageSetId of the site associated with the event for Self-Serve Pages."
        },
        "site": {
          "type": "integer",
          "minimum": 1,
          "description": "The siteId of the site associated with the event."
        },
        "version": {
          "type": "string",
          "minLength": 1,
          "maxLength": 32,
          "description": "The version of the site."
        }
      },
      "required": [
        "site",
        "type"
      ],
      "additionalProperties": false
    },
    "referrerUrl": {
      "type": "string",
      "format": "uri",
      "description": "The URL of the page which the visitor came from prior to the event."
    },
    "search": {
      "type": "object",
      "title": "Search",
      "description": "The Yext Search properties of the event.",
      "properties": {
        "experienceKey": {
          "type": "string",
          "minimum": 1,
          "maximum": 50,
          "description": "The key of the Search experience associated with the event."
        },
        "experienceVersion": {
          "type": "string",
          "minimum": 1,
          "maximum": 50,
          "description": "The version label of the Search experience associated with the event."
        },
        "queryId": {
          "type": "string",
          "regex": "^[a-zA-Z0-9-]{1,36}$",
          "description": "The queryId of the Search query associated with the event. `regex: \"^[a-zA-Z0-9-]{1,36}$\"`"
        }
      },
      "required": [
        "experienceKey",
        "experienceVersion"
      ],
      "additionalProperties": false
    },
    "searchRank": {
      "type": "integer",
      "minimum": 1,
      "maximum": 1000000,
      "description": "The 1-based position of the search result associated with the event."
    },
    "session": {
      "type": "string",
      "regex": "^[\\x20-\\x7E]{1,36}$",
      "description": "Session ID for the event. `regex: \"^[\\x20-\\x7E]{1,36}$\"`"
    },
    "timestamp": {
      "description": "The timestamp at which the event occurred.",
      "default": "$auto",
      "oneOf": [
        {
          "type": "string",
          "format": "date-time",
          "title": "ISO Timestamp",
          "description": "Specifies the timestamp at which the event occurred. `format: \"date-time\"`"
        },
        {
          "type": "number",
          "minimum": 0,
          "maximum": 32500915200,
          "title": "Epoch millisecond",
          "description": "Specifies the timestamp at which the event occurred as the number of milliseconds since 1970-01-01T00:00:00Z UTC, ignoring leap seconds."
        },
        {
          "const": "$auto",
          "title": "$auto",
          "description": "Indicates to use the time when the request was received as the event timestamp."
        }
      ]
    },
    "visitor": {
      "properties": {
        "id": {
          "type": "string",
          "regex": "^[\\x20-\\x7E]{1,64}$",
          "title": "string",
          "description": "Identifies the visitor associated with the event. `regex: \"^[\\x20-\\x7E]{1,64}$\"`"
        },
        "idMethod": {
          "description": "The method used to identify the visitor.",
          "oneOf": [
            {
              "type": "string",
              "regex": "^[a-zA-Z0-9_-]{1,16}$",
              "caseSensitive": false,
              "title": "string",
              "description": "Specifies how the visitor was identified. `caseSensitive: false`, `regex: \"^[a-zA-Z0-9_-]{1,16}$\"`"
            },
            {
              "const": "Yext",
              "title": "Yext",
              "description": "Indicates that the `visitor` was authenticated by Yext and the `visitor` property is a Yext userId."
            }
          ]
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false
    }
  }
}
